apiVersion: apps/v1
kind: Deployment
metadata:
  name: aplikasi-nginx
spec:
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: aplikasi-nginx
  template:
    metadata:
      labels:
        app: aplikasi-nginx
    spec:
      containers:
        - name: aplikasi-nginx
          image: nginx:1.22.1
          resources:
            limits:
              memory: "10Mi"
              cpu: "10m"
          ports:
            - containerPort: 80
          env:
            - name: DATABASE_PORT
              value: "3306"
            - name: DATABASE_USERNAME
              value: "Refian"
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: config-applikasi
                  key: DATABASE_PASSWORD
            - name: TOKEN
              valueFrom:
                secretKeyRef:
                  name: config-applikasi-2
                  key: TOKEN_KEY
            - name:
                PLAYER_INITIAL_LIVES # Notice that the case is different here
                # from the key name in the ConfigMap.
              valueFrom:
                configMapKeyRef:
                  name: game-demo # The ConfigMap this value comes from.
                  key: player_initial_lives # The key to fetch.
            - name: UI_PROPERTIES_FILE_NAME
              valueFrom:
                configMapKeyRef:
                  name: game-demo
                  key: ui_properties_file_name

          volumeMounts:
            - name: konfig-ssh
              mountPath: /var/secret/ssh
              readOnly: true
            - name: konfig-game
              mountPath: "/config"
              readOnly: true

      volumes:
        - name: konfig-ssh
          secret:
            secretName: config-ssh
        - name: konfig-game
          configMap:
            # Provide the name of the ConfigMap you want to mount.
            name: game-demo
            # An array of keys from the ConfigMap to create as files
            items:
              - key: "game.properties"
                path: "game.properties"
              - key: "user-interface.properties"
                path: "user-interface.properties"

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: hpa-aplikasi-nginx
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: aplikasi-nginx
  minReplicas: 1
  maxReplicas: 3
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 60

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: game-demo
data:
  # property-like keys
  player_initial_lives: "3"
  ui_properties_file_name: "user-interface.properties"

  # file-like keys
  game.properties: enemy.type=aliens,monster
    player.maximum-lives=5
  user-interface.properties: color.good=purple
    color.bad=tellow
    allow.textmode=true

---
apiVersion: v1
kind: Secret
metadata:
  name: config-applikasi-2
type: Opaque
data:
  TOKEN_KEY: bWFudGFw

  # Example:
  # password: {{ .Values.password | b64enc }}

---
apiVersion: v1
kind: Service
metadata:
  name: service-nginx
spec:
  type: ClusterIP
  selector:
    app: aplikasi-nginx
  ports:
    - port: 8080
      targetPort: 80
      # nodePort: 30001

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-nginx
  labels:
    name: ingress-nginx
spec:
  rules:
    - host: pcel-lele.info
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: service-nginx
                port:
                  number: 8080
